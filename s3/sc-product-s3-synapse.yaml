AWSTemplateFormatVersion: '2010-09-09'
Description: S3 Synapse ServiceCatalog product.
Parameters:
  RepoRootURL:
    Type: String
    Description: Root url for the repo containing the product templates.
  PortfolioId:
    Type: String
    Description: ID of the portfolio that will contain this product
  ProductName:
    Type: String
    Description: Name of the product that will be visible to the end user
    Default: 'S3: Synapse Bucket'
  StackDatetime:
    Type: String
    Description: Last updated date and time of product
    Default: ''
Resources:
  scs3product:
    Type: AWS::ServiceCatalog::CloudFormationProduct
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
            - E3003
            - W2001
    Properties:
      Name: !Ref ProductName
      Description: This product builds an AWS S3 bucket with private access
        for Synapse.
      ProvisioningArtifactParameters:
        - Description: !Sub 'Baseline version. Last updated at ${StackDatetime}.'
          Info:
            LoadTemplateFromURL: !Sub '${RepoRootURL}s3/sc-s3-synapse-ra-v1.0.0.yaml'
          Name: 'v1.0.0'
        - Description: !Sub 'Remove SynapseProdARN parameter. Last updated at ${StackDatetime}.'
          Info:
            LoadTemplateFromURL: !Sub '${RepoRootURL}s3/sc-s3-synapse-ra-v1.0.1.yaml'
          Name: 'v1.0.1'
      'Fn::Transform':
        Name: 'AWS::Include'
        Parameters:
          Location: "s3://cfn-snippets-bucket-cloudformationsnippetsbucket-elu83sv8ocdz/scipool/products.yaml"
      ReplaceProvisioningArtifacts: true
  Associates3:
    Type: AWS::ServiceCatalog::PortfolioProductAssociation
    Properties:
      PortfolioId: !Ref PortfolioId
      ProductId: !Ref 'scs3product'
  constraintec2linux:
    Type: AWS::ServiceCatalog::LaunchRoleConstraint
    DependsOn: Associates3
    Properties:
      PortfolioId: !Ref PortfolioId
      ProductId: !Ref 'scs3product'
      RoleArn: !ImportValue
        'Fn::Sub': '${AWS::Region}-sc-s3-launchrole-LaunchRoleArn'
Outputs:
  ProductId:
    Value: !Ref 'scs3product'
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ProductId'
