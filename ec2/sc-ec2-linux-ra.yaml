AWSTemplateFormatVersion: '2010-09-09'
Description: 'Service Catalog: EC2 Reference Architecture(fdp-1oc5f3ula).'
Transform: Explode
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - E3001
        - E3012
        - W7001
        - W2001
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Configuration
        Parameters:
          - KeyPair
          - PrivateNetwork
          - Ports
      - Label:
          default: Linux Instance Configuration
        Parameters:
          - EC2InstanceType
          - LinuxDistribution
    ParameterLabels:
      KeyPair:
        default: Key Pair
      PrivateNetwork:
        default: Use private network?
      Ports:
        default: Ports
      EC2InstanceType:
        default: EC2 Instance Type
      LinuxDistribution:
        default: Linux Distribution
Mappings:
  LinuxDistributions:
    Ubuntu:
      AMIID: ami-04b9e92b5572fa0d1
    AmazonLinux:
      AMIID: ami-00068cd7555f543d5
Parameters:
  PrivateNetwork:
    Type: String
    Description: In the private subnet (recommended) as opposed to a public subnet
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  Ports:
    Type: CommaDelimitedList
    Description: Ports to open (only applicable if not on private network)
    Default: "[]"
  EC2InstanceType:
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.12xlarge
      - c5d.18xlarge
      - c5d.24xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - m5ad.large
      - m5ad.xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5ad.12xlarge
      - m5ad.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - m5d.16xlarge
      - m5d.24xlarge
      - m5dn.large
      - m5dn.xlarge
      - m5dn.2xlarge
      - m5dn.4xlarge
      - m5dn.8xlarge
      - m5dn.12xlarge
      - m5dn.16xlarge
      - m5dn.24xlarge
      - m5n.large
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.12xlarge
      - m5n.16xlarge
      - m5n.24xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
      - r5ad.large
      - r5ad.xlarge
      - r5ad.2xlarge
      - r5ad.4xlarge
      - r5ad.12xlarge
      - r5ad.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.8xlarge
      - r5d.12xlarge
      - r5d.16xlarge
      - r5d.24xlarge
      - r5dn.large
      - r5dn.xlarge
      - r5dn.2xlarge
      - r5dn.4xlarge
      - r5dn.8xlarge
      - r5dn.12xlarge
      - r5dn.16xlarge
      - r5dn.24xlarge
      - r5n.large
      - r5n.xlarge
      - r5n.2xlarge
      - r5n.4xlarge
      - r5n.8xlarge
      - r5n.12xlarge
      - r5n.16xlarge
      - r5n.24xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
    Default: t3.micro
    Description: Amazon EC2 Instance Type
    Type: String
  KeyPair:
    Description: Name of existing EC2 key pair for the instance (required)
    Type: AWS::EC2::KeyPair::KeyName
    Default: scipool
  LinuxDistribution:
    Type: String
    Description: Linux distribution to use for instance operation system
    Default: AmazonLinux
    AllowedValues:
      - AmazonLinux
      - Ubuntu
Conditions:
  UsePrivateSubnet: !Equals [!Ref PrivateNetwork, 'true']
  UsePublicSubnet: !Equals [!Ref PrivateNetwork, 'false']
Resources:
  InstancePatchingRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
  PatchingInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'InstancePatchingRole'
  PrivateSubnetSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: UsePrivateSubnet
    Properties:
      GroupDescription: >-
        Allow all traffic to an instance originating from the VPN
      VpcId: !ImportValue
        'Fn::Sub': '${AWS::Region}-internalpoolvpc-VPCId'
      SecurityGroupIngress:
        - CidrIp: !ImportValue
            'Fn::Sub': '${AWS::Region}-internalpoolvpc-VpcCidr'
          FromPort: -1
          ToPort: -1
          IpProtocol: '-1'
          Description: 'Allow all VPN traffic'
      SecurityGroupEgress:
        - CidrIp: !ImportValue
            'Fn::Sub': '${AWS::Region}-internalpoolvpc-VpcCidr'
          FromPort: -1
          ToPort: -1
          IpProtocol: '-1'
  PublicSubnetSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    ExplodeParam: Ports
    Condition: UsePublicSubnet
    Properties:
      GroupDescription: Open ports to public internet
      VpcId: !ImportValue
        'Fn::Sub': '${AWS::Region}-internalpoolvpc-VPCId'
      SecurityGroupIngress:
        - Description: allow SSH
          IpProtocol: tcp
          FromPort: "!Explode Port"
          ToPort: "!Explode Port"
          CidrIp: '0.0.0.0/0'
        - Description: allow icmp
          IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '0.0.0.0/0'
      SecurityGroupEgress:
        - Description: allow all outgoing
          IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
  LinuxInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [LinuxDistributions, !Ref LinuxDistribution, AMIID]
      InstanceType: !Ref 'EC2InstanceType'
      SubnetId: !If
        - UsePrivateSubnet
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-internalpoolvpc-PrivateSubnet'
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-internalpoolvpc-PublicSubnet'
      SecurityGroupIds: !If
        - UsePrivateSubnet
        - [!GetAtt 'PrivateSubnetSecurityGroup.GroupId']
        - [!GetAtt 'PublicSubnetSecurityGroup.GroupId']
      KeyName: !Ref 'KeyPair'
      IamInstanceProfile: !Ref 'PatchingInstanceProfile'
      Tags:
        - Key: Description
          Value: Service-Catalog-EC2-Reference-Architecture
  LinuxPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      OperatingSystem: AMAZON_LINUX
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: 0
            ComplianceLevel: CRITICAL
            EnableNonSecurity: true
            PatchFilterGroup:
              PatchFilters:
                - Key: PRODUCT
                  Values:
                    - '*'
                - Key: CLASSIFICATION
                  Values:
                    - Security
                    - Bugfix
                    - Enhancement
                    - Recommended
                - Key: SEVERITY
                  Values:
                    - Critical
                    - Important
                    - Medium
                    - Low
      Description: Service Catalog EC2 Reference Architecture Patch Baseline for Amazon
        Linux instace
      Name: sc-ec2-ra-linux-patch-baseline
  MaintenanceWindowRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ssm.amazonaws.com
            Action:
              - sts:AssumeRole
  MaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      Description: Maintenance window to allow for patching Amazon Linux instances
      AllowUnassociatedTargets: false
      Cutoff: 2
      Schedule: cron(* 17 * * ? *)
      Duration: 6
      Name: sc-ec2-ra-linux-maintenance-window
  LinuxMainteanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      OwnerInformation: Service Catalog EC2 Reference Architecture
      Description: Service Catalog EC2 Reference Architecture - Patch Maintenance
        for Amazon Linux Instances
      WindowId: !Ref 'MaintenanceWindow'
      ResourceType: INSTANCE
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref 'LinuxInstance'
      Name: sc-ec2-ra-linux-patch-targets
  LinuxMaintenanceWindowTaskScan:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      MaxErrors: 1
      Description: 'Service Catalog EC2 Reference Architecture Maintenance Window
        Task: Scan for update for Amazon Linux Instance'
      ServiceRoleArn: !GetAtt 'MaintenanceWindowRole.Arn'
      Priority: 1
      MaxConcurrency: 1
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref 'LinuxInstance'
      Name: patch-sc-ec2-ra-linux-instances
      TaskArn: AWS-RunPatchBaseline
      WindowId: !Ref 'MaintenanceWindow'
      TaskParameters:
        Operation:
          Values:
            - Scan
      TaskType: RUN_COMMAND
  LinuxMaintenanceWindowTaskInstall:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      MaxErrors: 1
      Description: 'Service Catalog EC2 Reference Architecture Maintenance Window
        Task: Install update for Amazon Linux Instance'
      ServiceRoleArn: !GetAtt 'MaintenanceWindowRole.Arn'
      Priority: 2
      MaxConcurrency: 1
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref 'LinuxInstance'
      Name: patch-sc-ec2-ra-linux-instances
      TaskArn: AWS-RunPatchBaseline
      WindowId: !Ref 'MaintenanceWindow'
      TaskParameters:
        Operation:
          Values:
            - Install
      TaskType: RUN_COMMAND
Outputs:
  TemplateID:
    Value: service-catalog-reference-architectures/sc-ec2-ra
  AWSRegionName:
    Value: !Ref 'AWS::Region'
  LinuxInstanceId:
    Value: !Ref 'LinuxInstance'
  LinuxInstancePrivateIpAddress:
    Value: !GetAtt 'LinuxInstance.PrivateIp'
  LinuxInstanceAvailabilityZone:
    Value: !GetAtt 'LinuxInstance.AvailabilityZone'
  KeyPair:
    Value: !Ref 'KeyPair'
  EC2InstanceType:
    Value: !Ref 'EC2InstanceType'
  IAMInstancePatchingRole:
    Value: !Ref 'InstancePatchingRole'
  IAMPatchingInstanceProfile:
    Value: !Ref 'PatchingInstanceProfile'
  SSMMaintenaceWindowRole:
    Value: !Ref 'MaintenanceWindowRole'
  SSMLinuxPatchBaseline:
    Value: !Ref 'LinuxPatchBaseline'
