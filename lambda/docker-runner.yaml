# This template depends on having an AWS EFS in place which can be deployed with
# https://github.com/Sage-Bionetworks/aws-infra/blob/master/templates/EFS/efs.yaml
AWSTemplateFormatVersion: '2010-09-09'
Transform: S3Objects
Description: >-
  Docker runner product
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Container Image
        Parameters:
          - ImageUri
          - EntryPoint
          - Command
          - WorkingDirectory
          - MemorySize
      - Label:
          default: Synapse
        Parameters:
          - SynapseUser
          - SynapsePassword
      - Label:
          default: Execution Trigger
        Parameters:
          - EnableSchedule
          - Schedule
Parameters:
  MemorySize:
    Type: Number
    MinValue: 128
    MaxValue: 10240
    Default: 128
    Description: >
      The amount of memory available to the function at runtime. Increasing the function's
      memory also increases its CPU allocation.
  ImageUri:
    Type: String
    Description: >
      The URI of the Amazon ECR) repository for the Lambda function's container image.
      Example: 111111111.dkr.ecr.us-east-1.amazonaws.com/MY-DOCKER:latest
  EntryPoint:
    Type: String
    Default: ""
    Description: (Optional) The entry point to the application in the docker container
  Command:
    Type: CommaDelimitedList
    Default: ""
    Description: (Optional) Command separated list of parameters to pass in with docker ENTRYPOINT
  WorkingDirectory:
    Type: String
    Default: ""
    Description: (Optional) The working directory for the docker container
  EnableSchedule:
    Description: >
      true to run on a schedule, false to disable. If enabled a valid Schedule must be provided
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  Schedule:
    Description: >
      Schedule to execute the docker, can be a rate or a cron schedule. Format at
      https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html
    Type: String
    Default: cron(0 09 ? * MON *)  # Run every Monday at 9am
    ConstraintDescription: "Use schedule format: https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html"
  SynapseUser:
    Type: String
    Default: ""
    Description: (Optional) The synapse user name
  SynapsePassword:
    Type: String
    NoEcho: true
    Default: ""
    Description: (Optional) The synapse password
Conditions:
  HasEntryPoint: !Not [!Equals [!Ref EntryPoint, ""]]
  HasCommand: !Not
    - !Equals
      - !Join ["", !Ref Command]
      - ''
  HasWorkingDirectory: !Not [!Equals [!Ref WorkingDirectory, ""]]
Resources:
  Lambda:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: 'https://bootstrap-awss3cloudformationbucket-19qromfd235z9.s3.amazonaws.com/lambda-docker-runner/master/lambda-docker-runner.yaml'
      Parameters:
        SecurityGroupIds: !ImportValue
          'Fn::Sub': '${AWS::Region}-docker-runner-efs-VpcDefaultSecurityGroup'
        SubnetIds: !ImportValue
          'Fn::Sub': '${AWS::Region}-docker-runner-efs-SubnetIds'
        EfsPath: !ImportValue
          'Fn::Sub': '${AWS::Region}-docker-runner-efs-EfsPath'
        AccessPointArn: !ImportValue
          'Fn::Sub': '${AWS::Region}-docker-runner-efs-AccessPointArn'
        MemorySize: !Ref MemorySize
        ImageUri: !Ref ImageUri
        Command: !If [HasCommand, !Ref Command, !Ref 'AWS::NoValue']
        EntryPoint: !If [HasEntryPoint, !Ref EntryPoint, !Ref 'AWS::NoValue']
        WorkingDirectory: !If [HasWorkingDirectory, !Ref WorkingDirectory, !Ref 'AWS::NoValue']
        EnableSchedule: !Ref EnableSchedule
        Schedule: !Ref Schedule
        SynapseUser: !Ref SynapseUser
        SynapsePassword: !Ref SynapsePassword
Outputs:
  RunApi:
    Description: "REST API endpoint to run docker image"
    Value: !GetAtt Lambda.Outputs.DockerRunnerApi
