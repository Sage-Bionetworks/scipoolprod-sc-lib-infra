Description: "Service Now Connector - Service Catalog & IAM Setup v2.1"
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Roles"
        Parameters: 
          - EnableStackSetRole
    ParameterLabels: 
      EnableStackSetRole: 
        default: "Enable Stack Set roles"


Parameters: 
  EnableStackSetRole: 
    Description: Because stack sets perform stack operations across multiple regions, before you can get started creating stack set products you need to have the necessary permissions defined in your AWS accounts. Select 'yes' if you to not currently have AWSCloudFormationStackSetAdministrationRole and AWSCloudFormationStackSetExecutionRole roles created in your AWS account. Otherwise, select 'No' if they already exist.
    Default: yes
    Type: String
    AllowedValues: 
      - yes
      - no
    ConstraintDescription: must specify prod or test.

Conditions: 
  CreateStackSetResources: !Equals [ !Ref EnableStackSetRole, yes ]

Resources:
  Portfolio:
    Type: "AWS::ServiceCatalog::Portfolio"
    Properties:
      AcceptLanguage: "en"
      Description: "SNOW-SC Test Portfolio."
      DisplayName: "SNOW-SC Test Portfolio"
      ProviderName: "CCOE"
  
  S3Product:
    Type: "AWS::ServiceCatalog::CloudFormationProduct"
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      AcceptLanguage: "en"
      Description: "S3 Product"
      Distributor: "CCOE"
      Name: "S3 WithLifeCycle"
      Owner: "CCOE"
      ProvisioningArtifactParameters:
        - Description: "Version 3 of S3 product"
          Name: "Version - 3.0"
          Info:
            LoadTemplateFromURL : "https://raw.githubusercontent.com/aws-samples/aws-service-catalog-terraform-reference-architecture/master/ServiceCatalogSamples/sc-s3-transition-snow-ra.json"
      'Fn::Transform':
        Name: 'AWS::Include'
        Parameters:
          Location : "s3://CloudformationSnippetsBucket/scipoolprod-sc-lib-infra/support.yaml"
  ExecutionRole:
    Type: AWS::IAM::Role
    Condition: CreateStackSetResources
    Properties:
      RoleName: AWSCloudFormationStackSetExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref AWS::AccountId
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  
  
  AdministrationRole:
    Type: AWS::IAM::Role
    Condition: CreateStackSetResources
    Properties:
      RoleName: AWSCloudFormationStackSetAdministrationRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AssumeRole-AWSCloudFormationStackSetExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - "arn:aws:iam::*:role/AWSCloudFormationStackSetExecutionRole"
 
 
  PortfolioProductAssociation:
    Type: "AWS::ServiceCatalog::PortfolioProductAssociation"
    DependsOn:
      - Portfolio
      - S3Product
    Properties:
      AcceptLanguage: "en"
      PortfolioId: !Ref Portfolio
      ProductId: !Ref S3Product      
      
  AdminPortfolioPrincipalAssociation:
    Type: "AWS::ServiceCatalog::PortfolioPrincipalAssociation"
    DependsOn:
      - Portfolio
      - SnowEndUser
    Properties:
      AcceptLanguage: "en"
      PortfolioId: !Ref Portfolio
      PrincipalARN: !GetAtt SnowEndUser.Arn
      PrincipalType: "IAM"      
      
  S3LaunchConstraint:
    Type: "AWS::ServiceCatalog::LaunchRoleConstraint"
    DependsOn:
      - SCConnectLaunchRole
      - PortfolioProductAssociation
    Properties:
      AcceptLanguage: "en"
      Description: "Launch role"
      PortfolioId: !Ref Portfolio
      ProductId: !Ref S3Product
      RoleArn: !GetAtt SCConnectLaunchRole.Arn
      
      
  SCConnectLaunchRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: SCConnectLaunchRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - servicecatalog.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWSCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AWSCloudFormationFullAccess
                Effect: Allow
                Action:
                  - "cloudformation:DescribeStackResource"
                  - "cloudformation:DescribeStackResource"
                  - "cloudformation:DescribeStackResources"
                  - "cloudformation:GetTemplate"
                  - "cloudformation:List*"
                  - "cloudformation:DescribeStackEvents"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStackEvents"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:GetTemplateSummary"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  -  "s3:GetObject"
                Resource: '*'
        - PolicyName: ServiceCatalogSSMActionsBaseline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: ServiceCatalogSSMActionsBaselineSID
                Effect: Allow
                Action:
                  - "servicecatalog:ListServiceActionsForProvisioningArtifact"
                  - "servicecatalog:ExecuteprovisionedProductServiceAction"
                  - "ssm:DescribeDocument"
                  - "ssm:GetAutomationExecution"
                  - "ssm:StartAutomationExecution"
                  - "ssm:StopAutomationExecution"
                  - "cloudformation:ListStackResources"
                  - "ec2:DescribeInstanceStatus"
                  - "ec2:StartInstances"
                  - "ec2:StopInstances"                  
                Resource: '*'                                
      
  SCSyncUser:
    Type: 'AWS::IAM::User' 
    Properties:
      UserName: SCSyncUser
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ServiceCatalogAdminReadOnlyAccess
      Policies:
        - PolicyName: SNOWSSMActionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: SNOWSSMActionPolicySID
                Effect: Allow
                Action:
                  - "servicecatalog:DeleteProduct"
                  - "servicecatalog:DeleteConstraint"
                  - "servicecatalog:DeleteProvisionedProductPlan"
                  - "servicecatalog:DeleteProvisioningArtifact"
                  - "servicecatalog:DisassociateProductFromPortfolio"                  
                Resource: '*'
      
  SCSyncUserAccessKeys:
    DependsOn: SCSyncUser
    Type: "AWS::IAM::AccessKey"
    Properties: 
      Status: Active
      UserName: SCSyncUser

  SnowEndUser:
    Type: 'AWS::IAM::Role' 
    Properties:
      RoleName: SnowEndUser
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ServiceCatalogServiceNowAdditionalPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: GetRole
                Effect: Allow
                Action:
                  - "iam:GetRole"
                  - "iam:PassRole"
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/AWSCloudFormationStackSetAdministrationRole'
      
  SCEndUser:
    Type: 'AWS::IAM::User' 
    DependsOn: 
      - SnowEndUser
    Properties:
      UserName: SCEndUser
      Policies:
        - PolicyName: StsAssumeSC        
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: 
                  - "sts:AssumeRole"
                Resource: !GetAtt SnowEndUser.Arn
                
  SCEndUserAccessKeys:
    DependsOn: SCEndUser
    Type: "AWS::IAM::AccessKey"
    Properties: 
      Status: Active
      UserName: SCEndUser


Outputs:
  Portfolio:
    Value: !GetAtt Portfolio.PortfolioName 
  ProductID:
    Value: !Ref S3Product 
  SCSyncUserAccessKey:
    Value: !Ref SCSyncUserAccessKeys 
  SCSyncUserSecretAccessKey:
    Value: !GetAtt SCSyncUserAccessKeys.SecretAccessKey 
  SnowEndUser:
    Value: !GetAtt SnowEndUser.Arn
  SCEndUserAccessKey:
    Value: !Ref SCEndUserAccessKeys 
  SCEndUserSecretAccessKey:
    Value: !GetAtt SCEndUserAccessKeys.SecretAccessKey 
  SCIAMAdminRoleARN:
    Value: !GetAtt AdministrationRole.Arn
  SCStackSetAdministratorRoleARN:
    Value: !GetAtt AdministrationRole.Arn
  SCIAMStackSetExecutionRoleName:
    Value: "AWSCloudFormationStackSetExecutionRole"
